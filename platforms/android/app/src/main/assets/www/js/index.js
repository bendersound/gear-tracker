//Initializes SQLite server for local storage
var localStorage = window.localStorage;

//An array of all cases in the app
var caseList = [];

//Keeps track of the current case being operated on
var caseIDText;

//A stack containing a DOM element for each screen that has been opened by the user
var screenStack = [];

var app = {
  // Application Constructor
  initialize: function() {
    //Device listeners
    document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);
    document.addEventListener('pause', this.onPause.bind(this), false);
    document.addEventListener('backbutton', this.onBackKeyDown, false);

    //Home screen listeners
    document.getElementById('cameraButton').addEventListener('click', scanQR);
    document.getElementById('openCaseList').addEventListener('click', openCaseList);

    //Case list screen listeners
    document.getElementById('submitCaseButton').addEventListener('click', openCaseFormManual);
    document.getElementById('createCaseButton').addEventListener('click', openCaseFormNew);
    document.getElementById('clearStorageButton').addEventListener('click', clearLocalStorage);
    document.getElementById('generateQRButton').addEventListener('click', generateQRManual);

    //Case form screen listeners
    document.getElementById('submitFormButton').addEventListener('click', submitForm);
  },

  onDeviceReady: function()
  {
    openCamera();
    //openTestCases1();
    caseList = openCases();

    renderCaseList();
    console.log('device ready');
  },

  //TODO
  onPause: function()
  {
    storeCases();
  },

  // Overrides the default back button functionality
  onBackKeyDown: function(e)
  {
    //If a screen has been opened, hide the most recent one
    if (screenStack.length !== 0)
    {
      hideCurrentElement();
      return;
    }

    // Otherwise, exit the app
    navigator.app.exitApp();
  }
};

// Improved alert dialog box
function popupDialog(title, message)
{
  alert(message);
  /*
  var buttonName = 'Ok';
  navigator.notification.alert(message, alertCallback, title, buttonName);

  function alertCallback()
  {
   console.log('Alert Dismissed');
  }
  */
}

//pause the preview so users know a code is being scanned
function scanQR()
{
  var scanCallback = function(error, content)
  {
    if(error)
    {
      popupDialog('Error', 'Scan unsuccesful')
    }
    else
    {
      {
        var idPair = content.split('.', 2);
        if (idPair[0] === 'gear_tracker') {
          openCaseForm(parseInt(idPair[1]));
        }
        else
        {
          popupDialog('Error', 'This QR code was not generated by Gear Tracker');
        }
      }
    }
  }

  QRScanner.pausePreview(function(status)
  {
    console.log(status);
  })
  QRScanner.resumePreview(function(status)
  {
    console.log(status);
  })
  QRScanner.scan(scanCallback);
}

//generates a QR code in the format of 'gear_tracker.#CASE ID#'
//TODO export qr
function generateQR(caseID)
{
  caseID = 'gear_tracker.' + caseID;
  document.getElementById('tmpQRFrame').innerHTML = '';
  if (typeof caseID !== 'undefined')
  {
    jQuery(function () {
      jQuery('#tmpQRFrame').qrcode(caseID);
    })
  }
}

//TODO this might not need to be in here
function generateQRManual() {
  generateQR(caseIDText);
}

// Initializes the QR scanner
function openCamera()
{
  var prepareCallback = function(err, status)
  {
    if(error)
    {
      console.error(error._message);
    }
    else
    {
      console.log(status);
    }
  };

  QRScanner.prepare(prepareCallback);
  QRScanner.show(function(status)
  {
    console.log(status);
  });
}

//Store data in the current case form in an array
function submitForm()
{
  // only update array if there are any changes to be made
  var updated = false;
  var caseNameText = document.getElementById('caseFormName').value;
  var caseInfoText = document.getElementById('caseInfoInput').value;
  
  if (typeof caseList[caseIDText] !== 'undefined') {
    if (typeof caseInfoText !== 'undefined' && caseInfoText !== caseList[caseIDText].info) {
      caseList[caseIDText].info = caseInfoText;
      updated = true;
    }

    if (typeof caseNameText !== 'undefined' && caseIDText !== caseList[caseIDText].name) {
      caseList[caseIDText].name = caseNameText;
      updated = true;
    }
  }
  else if (caseIDText === caseList.length) {
    caseList.push({ name: caseNameText, info: caseInfoText, equipment_count: caseIDText});
    updated = true;
  }
  else
  {
    popupDialog('Error!', 'Case could not be saved');
    return;
  }

  if (updated) renderCaseList();
  popupDialog('Success!', 'Information updated');
  storeCases();
}

//open form for viewing
//param caseID used for passing in case ID
function openCaseForm(caseID)
{
  //document.getElementById('caseForm').reset();
  if (typeof caseList[caseID] !== 'undefined') {
    document.getElementById('caseFormName').value = caseList[caseID].name;
    document.getElementById('caseInfoInput').value = caseList[caseID].info;
  }
  else if (caseID === caseList.length)
  {
    document.getElementById('caseForm').reset();
  }
  else if (caseID > caseList.length)
  {
    popupDialog('Error!', 'Case does not exist. Create a new case.');
  }
  else
  {
    popupDialog('Error!', 'Cannot open case');
    return;
  }
  caseIDText = caseID;
  displayElement('caseFormPopup');
}

//get case id from field on homescreen and open for editting
function openCaseFormManual()
{
  openCaseForm(document.getElementById('caseIDForm').value);
}

// Create a new case and open the form for that case
function openCaseFormNew()
{
  openCaseForm(caseList.length);
}

function openCaseList() {
  displayElement('leftPanel');
}

//clear all cases in ram and on disk
function clearLocalStorage()
{
  localStorage.clear();
  renderEmptyCaseList();
  caseList = [];
}

// render a list of objects within a table which is then added to the given index of the given parent
// header specifies which parameters of the object to display in which order as well as the header text for that parameter
function renderList(items, header, parent, childIndex)
{
  var tBody = document.createElement("tbody");
  var tRow = document.createElement("tr");
  var newCell;
  var i = 0;

 
  for (var headerProp in header)
  {
    newCell = document.createElement("th");
    newCell.innerHTML = header[headerProp];
    tRow.appendChild(newCell);
  }
  tBody.appendChild(tRow);
  

  for (i = 0; i < items.length; i++)
  {
    tRow = document.createElement("tr");
    //tableRow.setAttribute('data-href', 'javascript:openCaseForm(' + items[i].name + ');');

    for (var propertyValue in header)
    {
      newCell = document.createElement("td");
      newCell.innerHTML = items[i][propertyValue];
      tRow.appendChild(newCell);
    }
    tBody.appendChild(tRow);
  }
  parent.replaceChild(tBody, parent.childNodes[childIndex])
}

// helper for renderCaseList() renders the proper message if the case list is empty
function renderEmptyCaseList()
{
  var cases = [];
  var header = { tmp: 'No cases here!' };
  var listParent = document.getElementById('caseList');
  renderList(cases, header, listParent, 0);
}

// renders the items in the case list
function renderCaseList()
{
  if (typeof caseList === 'undefined')
  {
      renderEmptyCaseList();
  }

  var header = { name: 'Name', equipment_count: 'ID' };
  var listParent = document.getElementById('caseList');

  renderList(caseList, header, listParent, 0);
}

// testing
function openTestCases0()
{
    return [];
}

// testing
function openTestCases1()
{
  var testCase1 = {name:'QSC 1', info:'1x QSC K10.2', equipment_count:0}
  var testCase2 = {name:'QSC 2', info:'1x QSC K10.2', equipment_count:1}
  var testCase3 = {name:'XLR Cables', info:"1x 50' GLS XLR\n3x 25' GLS XLR\n4x 10' AB XLR\n4x 6' AB XLR", equipment_count:2}
  var testCase4 = {name:'Megapars 1', info:'8x ADJ Megapar RGBUV', equipment_count:3}
  var testCase5 = {name:'Megapars 2', info:'8x ADJ Megapar RGBUV', equipment_count:4}

  caseList = [testCase1, testCase2, testCase3, testCase4, testCase5];
  storeCases();
  caseList = [];
}

// load case data stored in disk
function openCases()
{
  /*
   var cases = localStorage.getItem('case_list');
   */
  return JSON.parse(localStorage.getItem('caseList'));
}

function storeCases()
{
  localStorage.setItem('caseList', JSON.stringify(caseList));
}

function displayElement(id)
{
  document.getElementById(id).style.display = 'block';
  screenStack.push(id);
}

function hideCurrentElement()
{
  id = screenStack.pop();
  document.getElementById(id).style.display = 'none';
}

app.initialize();
